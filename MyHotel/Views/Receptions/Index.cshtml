@model IEnumerable<MyHotel.ViewModel.BedRoom.BedRoomListViewModel>

@{
    string BGColor = "bg-success";
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Recepción</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active">Recepción</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->

<section class="content">
    <div class="container-fluid">
        <div class="col-12">
            <div class="card card-primary card-tabs">
                <div class="card-header p-0 pt-1">
                    <ul class="nav nav-tabs" id="custom-tabs-one-tab" role="tablist">

                        <li class="nav-item">
                            <a class="nav-link active" id="custom-tabs-one-home-tab" data-toggle="pill" href="#custom-tabs-one-home" role="tab" aria-controls="custom-tabs-one-home" aria-selected="true">Todo</a>
                        </li>

                        @foreach (var tipo in Model.OrderBy(x => x.LevelID).Select(x => x.LevelName).Distinct().ToList())
                        {
                            <li class="nav-item">
                                <a class="nav-link" id="@tipo.Replace(" ","_")-tab" data-toggle="pill" href="#@tipo.Replace(" ","_")" role="tab" aria-controls="custom-tabs-one-home" aria-selected="true">@tipo</a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="custom-tabs-one-tabContent">
                        <div class="tab-pane fade active show" id="custom-tabs-one-home" role="tabpanel" aria-labelledby="custom-tabs-one-home-tab">
                            <div class="row">
                                @foreach (var bed in Model)
                                {
                                    if (bed.Status.Equals("DISPONIBLE")) { BGColor = "bg-success"; } else { BGColor = "bg-danger"; };


                                    <div class="col-lg-3 col-sm-6 col-12">
                                        <!-- small box -->
                                        <div class="small-box  @BGColor">
                                            <div class="inner">
                                                <h3>@bed.Name<sup style="font-size: 20px"></sup></h3>

                                                <p>
                                                    @bed.TypeRoomName
                                                </p>
                                                
                                            </div>
                                            <div class="icon">
                                                <i class="fas fa-bed"></i>
                                            </div>
                                            <a href="#" class="small-box-footer">@bed.Status<i class="fas fa-arrow-circle-right"></i></a>
                                        </div>
                                    </div>

                                }
                            </div>
                        </div>

                        @foreach (var tipo in Model.Select(x => x.LevelName).Distinct().ToList())
                        {

                            <div class="tab-pane fade" id="@tipo.Replace(" ","_")" role="tabpanel" aria-labelledby="@tipo.Replace(" ","_")-tab">
                                <div class="row">
                                    @foreach (var bed in Model.Where(x => x.LevelName.Equals(tipo)).ToList())
                                    {
                                        if (bed.Status.Equals("DISPONIBLE")) { BGColor = "bg-success"; } else { BGColor = "bg-danger"; };

                                        <div class="col-lg-3 col-sm-6 col-12">
                                            <!-- small box -->
                                            <div class="small-box @BGColor">
                                                <div class="inner">
                                                    <h3>@bed.Name<sup style="font-size: 20px"></sup></h3>
                                                    <p>
                                                        @bed.TypeRoomName
                                                    </p>
                                                </div>
                                                <div class="icon">
                                                    @* <i class="ion ion-stats-bars"></i>*@
                                                    <i class="fas fa-bed"></i>
                                                </div>
                                                <a href="#" class="small-box-footer">@bed.Status<i class="fas fa-arrow-circle-right"></i></a>
                                            </div>
                                        </div>

                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <!-- /.card -->
            </div>
        </div>
    </div>
</section>
